---
// src/pages/about.astro
import Layout from '../layouts/Layout.astro';
import Sidebar from '../components/Sidebar.astro';
---

<Layout title="About - Open Patterns">
  <main class="app-container">
    <Sidebar />
    <div class="main-content">
      <h1>About Open Patterns</h1>
      <p>Open Patterns are a collection of high-quality, themeable, accessible, vetted, open-source UI components <a href="https://open-ui.org/">OpenUI</a>.</p>
      <ul>
        <li><strong>Standards-based</strong>
        <li><strong>Accessible:</strong> Vetted by world-renowned accessibility experts</li>
        <li><strong>Themeable:</strong> Easy to implement and customize</li>
        <li><strong>Open source:</strong> Free to use and contribute to</li>
      </ul>


      <h2>Why</h2>

      <p>The world's web developers are rebuilding the same badges, form controls, alerts, cards, date pickers, and other common components.
      
      <h2>What</h2>

      <h2>How</h2>

      <h2>When</h2>

      <h2>Who</h2>
      OpenUI. Contributors who are passionate about the web, standards, acessibility, and . We'd welcome your contributions both large and small!

      <hr />

      <h2>Frequently Asked Questions</h2>

      <h3>Why the heck do we need a Global Design System?</h3>
      <p>Question: Isn’t every open-source design system a “global design system”? Aren’t the people making them trying to make them as useful as possible for as many people as possible? If that’s right, and thus they have failed, why did they fail? What are they doing that doesn’t map to the philosophy of a global design system?</p>
      
      <p>These solutions were (understandably!) created with a specific organization’s specific goals & considerations in mind. The architecture, conventions, and priorities of these libraries are tuned to the organization it serves; they don’t take into account the sheer breadth of the world’s UI use cases.</p>
      <p>They nearly always come with a specific default aesthetic. If you adopt Material Design, for example, your products will look like Google’s products. These libraries can be configurable, which is great, but themeabilitiy has limits and often results in many teams fighting the default look-and-feel to achieve custom results. In our experience, this is where folks end up creating a big mess.</p>

      <h2>Isn’t this just HTML?</h2>
      <p>Shouldn’t missing components simply be added to HTML?</p>
      <p>Historically, that has been the only mission of <a href="https://open-ui.org/">OpenUI</a>! Take common UI patterns and controls and get them into web standards.</p>
      <p>However, not every component or 

      <h2>How is this different from other existing component libraries?</h2>

      <h2>Wouldn't this have to account for every use case?</h2>
    </div>
  </main>
</Layout>